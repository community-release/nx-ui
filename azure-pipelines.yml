trigger:
  branches:
    include:
      - stage

pool:
  vmImage: ubuntu-latest

steps:

# Use node
- task: UseNode@1
  inputs:
    version: '18.x'

# Install Node packages
- script: |
    npm install -g pnpm
    pnpm install
  displayName: 'Install Node packages'

# Build docs
- script: |
    pnpm docs:generate
  displayName: 'Build docs'

# Run tests
- script: |
    pnpm test
  displayName: 'Run tests'

# Copy build result to Build.ArtifactStagingDirectory
- task: CopyFiles@2
  inputs:
    Contents: '.output/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy build result to Build.ArtifactStagingDirectory'

# Archive build files
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/.output'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/deploy.zip'
  displayName: 'Archive build files'

## Remove old project from temp working directory if it exist
- task: SSH@0
  inputs:
    sshEndpoint: DEAC_VM
    runOptions: 'commands'
    commands: |
      sudo rm -Rf /var/www/temp/deploy/nx-ui
  displayName: 'Remove old project from temp working directory if it exist'

# Deploy files to stage server temp folder over SSH
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: DEAC_VM
    sourceFolder: '$(Build.ArtifactStagingDirectory)'
    contents: 'deploy.zip'
    targetFolder: /var/www/temp/deploy/nx-ui/
    cleanTargetFolder: false
    overwrite: true 
    failOnEmptySource: true # Fail if no files found to copy. Default: false.
  displayName: 'Deploy files to stage server temp folder over SSH'

## Unzip build archive and delete deploy.zip
- task: SSH@0
  inputs:
    sshEndpoint: DEAC_VM
    runOptions: 'commands'
    commands: |
      unzip -o /var/www/temp/deploy/nx-ui/deploy.zip -d /var/www/temp/deploy/nx-ui
      rm /var/www/temp/deploy/nx-ui/deploy.zip
  displayName: 'Unzip build archive and delete deploy.zip'

## Copy files from temp to working directory
- task: SSH@0
  inputs:
    sshEndpoint: DEAC_VM
    runOptions: 'commands'
    commands: |
      sudo rsync -avz --delete /var/www/temp/deploy/nx-ui/ /var/www/nx-ui
  displayName: 'Copy files from temp to working directory'

## Remove project from temp working directory
- task: SSH@0
  inputs:
    sshEndpoint: DEAC_VM
    runOptions: 'commands'
    commands: |
      sudo rm -Rf /var/www/temp/deploy/nx-ui
  displayName: 'Remove project from temp working directory'

## Change files owner to www-data
- task: SSH@0
  inputs:
    sshEndpoint: DEAC_VM
    runOptions: 'commands'
    commands: |
      sudo chown -R www-data:www-data /var/www/nx-ui
  displayName: 'Change files owner to www-data'

